package pansong291.simplepinyin;

/**
 * Created by pansong291 on 2018/9/12.
 */
final class PinyinData
{

 public static final char MIN_VALUE = 19968;

 public static final char MAX_VALUE = 40869;

 static final String PINYIN_12295 = "Ling";

 static final char CHAR_12295 = 12295;

 static final int PINYIN_CODE_1_OFFSET = 7000;

 static final int PINYIN_CODE_2_OFFSET = 7000 * 2;

 static final int[] BIT_MASKS = new int[]{0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80};

 static final int[] TWO_BIT_MASKS = new int[]{0xc0, 0x30, 0xc, 0x3};

 static final int[] FOUR_BIT_MASKS = {0xf0,0xf}; 

 static final int PADDING_MASK = 256;

 private PinyinData(){}

 static String getPinyin(int ind)
 {
  if(ind == 0)return "";
  int zmInd, pyLen;
  char ziMu;
  StringBuilder strb = new StringBuilder();
  zmInd = decodeIndexPyZiMu(ind - 1);
  if(ind == INDEX_PY_ZIMU3.length)
  //这里，py字母的个数不一定是偶数，代码不够严谨，拼音个数变化时可能会出错
   pyLen = PY_ZIMU_CODE.length * 2 - zmInd;
  else pyLen = decodeIndexPyZiMu(ind) - zmInd;

  for(int i = 0;i < pyLen;i++)
  {
   int ins1 = (zmInd + i) / 8,ins4 = (zmInd + i) / 2;
   int iny1 = (zmInd + i) % 8,iny4 = (zmInd + i) % 2;
   //低4位
   ziMu = (char)((PY_ZIMU_CODE[ins4] & FOUR_BIT_MASKS[iny4]) >>> 4 - 4 * iny4);
   //高1位
   if((PY_ZIMU_CODE_PADDING[ins1] & BIT_MASKS[7 - iny1]) != 0)
    ziMu = (char)(ziMu | 0x10);

   ziMu += '^';
   if(i == 0)ziMu -= 'a' - 'A';
   strb.append(ziMu);
  }
  return strb.toString();
 }

 private static short decodeIndexPyZiMu(int offset)
 {
  int ins1 = offset / 8,ins2 = offset / 4;
  int iny1 = offset % 8,iny2 = offset % 4;
  //低8位
  short realIndex = (short)(INDEX_PY_ZIMU3[offset] & 0xff);
  //中2位，有00，01，10，11共4种情况
  short m2Bit = (short)(index_py_zimu2(ins2) & TWO_BIT_MASKS[iny2]);
  m2Bit = (short)(m2Bit << 2 * iny2 + 2);
  realIndex = (short)(realIndex | m2Bit);
  //高1位，非0即1
  if((index_py_zimu1(ins1) & BIT_MASKS[7 - iny1]) != 0)
  {
   realIndex = (short)(realIndex | 0x400);
  }
  return realIndex;
 }

 static final byte[] INDEX_PY_ZIMU1 = new byte[]{
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  127,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};

 static byte index_py_zimu1(int i)
 {
  if(i < 40)
  {
   return 0;
  }else if(i == 40)
  {
   return 127;
  }else
  {
   return -1;
  }
 }

 static final byte[] INDEX_PY_ZIMU2 = new byte[]{
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  21,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
  106,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,
  -86,-65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
  -64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,
  85,85,85,85};

 static byte index_py_zimu2(int i)
 {
  if(i == 20)
  {
   return 21;
  }else if(i == 40)
  {
   return 106;
  }else if(i == 61)
  {
   return -65;
  }else if(i == 80)
  {
   return -64;
  }else if(i == 99)
  {
   return 21;
  }else if(i < 20)
  {
   return 0;
  }else if(i < 40)
  {
   return 85;
  }else if(i < 61)
  {
   return -86;
  }else if(i < 80)
  {
   return -1;
  }else if(i < 99)
  {
   return 0;
  }else
  {
   return 85;
  }
 }

 static final byte[] INDEX_PY_ZIMU3 = new byte[]{
  0,1,3,5,8,10,12,15,18,22,25,28,31,35,37,41,45,48,51,55,
  57,59,61,64,67,71,74,76,79,83,86,90,94,99,103,106,110,115,118,123,
  127,-126,-121,-116,-110,-106,-102,-98,-96,-92,-89,-87,-83,-80,-77,-74,-72,-69,-66,-62,
  -59,-57,-53,-51,-48,-44,-40,-37,-33,-30,-26,-23,-21,-17,-14,-11,-8,-7,-5,-3,
  -1,1,3,6,10,13,16,20,22,25,27,29,32,35,39,42,44,47,50,54,
  58,61,63,66,70,74,79,82,85,88,90,93,96,100,103,105,108,111,115,119,
  122,124,127,-125,-121,-116,-113,-110,-107,-105,-102,-98,-93,-89,-86,-83,-79,-74,-71,-69,
  -65,-62,-59,-57,-54,-51,-47,-44,-42,-39,-35,-31,-28,-26,-23,-19,-15,-10,-7,-4,
  -1,1,4,7,11,14,16,19,23,25,28,32,37,41,44,47,51,54,58,61,
  63,67,70,73,75,78,79,81,84,87,91,94,96,99,102,106,108,112,116,119,
  122,126,-127,-125,-122,-120,-118,-115,-112,-108,-105,-103,-100,-97,-93,-91,-89,-85,-80,-76,
  -73,-70,-66,-63,-59,-56,-54,-50,-47,-45,-42,-41,-39,-37,-34,-31,-27,-24,-21,-18,
  -14,-12,-8,-4,-1,2,6,8,11,13,15,18,22,27,31,34,37,41,46,49,
  51,55,58,61,64,68,71,73,76,80,82,86,89,91,95,98,101,104,106,109,
  112,116,119,121,124,-128,-125,-121,-117,-112,-108,-105,-101,-97,-92,-89,-85,-82,-78,-73,
  -68,-62,-58,-54,-50,-48,-44,-41,-39,-35,-32,-29,-26,-24,-21,-18,-14,-11,-9,-5,
  -3,1,5,8,12,16,19,21,25,28,31,34,36,39,42,46,49,52,56,58,
  60,62,65,69,74,78,81,84,88,93,96,98,102,105,108,110,113,117,120,122,
  124,-128,-125,-121,-119,-115,-112,-110,-106,-103,-100,-98,-95,-92,-88,-85,-83,-80,-77,-73,
  -70,-66,-62,-57,-53,-50,-46,-42,-37,-34,-29,-25,-22,-18,-13,-8,-2,2,6,10,
  12,16,19,21,25,28,31,34,37,40,43,45,48,49,52,53};

 static final short[] INDEX_PY_ZIMU = new short[]{
  0,1,3,5,8,10,12,15,18,22,25,28,31,35,37,41,45,48,51,55,
  57,59,61,64,67,71,74,76,79,83,86,90,94,99,103,106,110,115,118,123,
  127,130,135,140,146,150,154,158,160,164,167,169,173,176,179,182,184,187,190,194,
  197,199,203,205,208,212,216,219,223,226,230,233,235,239,242,245,248,249,251,253,
  255,257,259,262,266,269,272,276,278,281,283,285,288,291,295,298,300,303,306,310,
  314,317,319,322,326,330,335,338,341,344,346,349,352,356,359,361,364,367,371,375,
  378,380,383,387,391,396,399,402,405,407,410,414,419,423,426,429,433,438,441,443,
  447,450,453,455,458,461,465,468,470,473,477,481,484,486,489,493,497,502,505,508,
  511,513,516,519,523,526,528,531,535,537,540,544,549,553,556,559,563,566,570,573,
  575,579,582,585,587,590,591,593,596,599,603,606,608,611,614,618,620,624,628,631,
  634,638,641,643,646,648,650,653,656,660,663,665,668,671,675,677,679,683,688,692,
  695,698,702,705,709,712,714,718,721,723,726,727,729,731,734,737,741,744,747,750,
  754,756,760,764,767,770,774,776,779,781,783,786,790,795,799,802,805,809,814,817,
  819,823,826,829,832,836,839,841,844,848,850,854,857,859,863,866,869,872,874,877,
  880,884,887,889,892,896,899,903,907,912,916,919,923,927,932,935,939,942,946,951,
  956,962,966,970,974,976,980,983,985,989,992,995,998,1000,1003,1006,1010,1013,1015,1019,
  1021,1025,1029,1032,1036,1040,1043,1045,1049,1052,1055,1058,1060,1063,1066,1070,1073,1076,1080,1082,
  1084,1086,1089,1093,1098,1102,1105,1108,1112,1117,1120,1122,1126,1129,1132,1134,1137,1141,1144,1146,
  1148,1152,1155,1159,1161,1165,1168,1170,1174,1177,1180,1182,1185,1188,1192,1195,1197,1200,1203,1207,
  1210,1214,1218,1223,1227,1230,1234,1238,1243,1246,1251,1255,1258,1262,1267,1272,1278,1282,1286,1290,
  1292,1296,1299,1301,1305,1308,1311,1314,1317,1320,1323,1325,1328,1329,1332,1333};

 static final byte[] PY_ZIMU_CODE = new byte[]{
  51,-77,3,9,49,67,67,-76,48,67,9,67,20,123,71,4,112,-108,-76,-77,
  4,-77,20,-73,75,4,-80,-108,20,117,53,59,83,5,48,-107,49,87,87,5,
  112,-107,-93,90,59,90,48,90,48,-107,-93,21,-89,90,112,90,112,-107,-85,90,
  16,-107,-95,117,-89,90,115,-75,-89,48,90,115,9,90,123,90,112,90,113,91,
  81,9,81,117,117,115,5,123,87,5,113,99,99,-74,48,99,9,99,22,118,
  112,-106,-74,-77,107,48,107,49,107,118,-80,-106,-73,97,9,97,118,118,115,6,
  123,103,6,113,119,-73,7,71,8,56,48,-125,9,-121,-72,112,-121,9,-127,-127,
  120,121,57,59,-109,9,48,-103,49,-105,-105,-71,112,-105,9,-111,9,-111,121,121,
  115,-105,59,-105,48,-105,48,-103,123,-105,9,113,-93,-93,-70,48,-93,9,-93,26,
  122,123,-89,10,112,-102,16,-102,23,-89,-89,58,115,-70,115,10,115,9,-89,-70,
  112,-89,28,-68,-77,-53,48,-53,48,-100,-77,28,-73,-53,12,-80,-100,-79,9,-53,
  124,124,115,12,119,-57,13,61,59,-45,13,48,-99,49,-41,-41,13,112,-99,16,
  -99,23,-41,-41,61,115,-67,115,13,115,9,-41,-67,112,-41,30,62,59,-29,14,
  48,-98,49,-25,-25,-66,112,-98,-66,-77,-21,48,-21,48,-98,-77,30,-73,-21,14,
  -80,-98,-73,-31,9,-31,126,126,115,14,112,-25,30,-114,-121,-1,63,59,-13,15,
  48,-97,49,-9,-9,-65,112,-9,9,-5,-5,48,-5,49,-5,127,-80,-5,9,-5,
  127,31,23,-9,3,3,-80,48,3,9,3,16,112,123,7,0,112,-112,-112,-80,
  -77,0,-77,9,11,49,11,112,-80,11,9,11,112,16,-112,23,7,7,48,7,
  16,-128,-121,17,114,50,59,35,2,48,-110,49,39,-78,112,39,9,43,43,48,
  43,49,43,114,-80,43,9,33,33,114,115,-77,-77,59,48,59,48,-109,-77,19,
  -73,59,3,-80,-109,-79,9,59,115,115,115,3,119,55,4,48,67,9,67,20,
  116,112,71,9,75,65,9,65,116,116,115,4,123,71,4,113,83,83,-75,48,
  83,9,83,21,117,112,87,9,90,53,-93,-75,-93,5,-93,9,90,49,90,117,
  -89,-75,-89,5,-89,9,90,-75,-95,117,-89,90,115,90,115,-75,-89,48,90,115,
  9,90,123,90,112,90,113,91,81,9,81,117,117,115,5,123,87,5,113,99,
  99,-74,48,99,9,99,22,118,112,-106,-74,-77,6,-77,22,-73,107,9,97,9,
  97,118,118,115,6,123,103,6,113,-109,-109,-71,48,-109,9,-105,-71,112,-105,9,
  -111,-105,-85,-85,58,-77,10,-77,9,-85,49,-85,122,-80,-85,9,-85,16,-102,-73,
  -89,-89,48,-89,122,112,-77,-77,11,48,-101,49,-73,-69,-69,49,-69,11,-80,-101,
  27,16,-101,23,-73,-73,48,-73,123,112,-61,-61,-68,48,-61,9,-61,28,124,123,
  -57,12,112,-100,-93,-54,59,-54,48,-54,48,-100,-93,28,-89,-54,123,-54,112,-54,
  112,-100,-85,-54,16,-100,-95,124,-89,-54,115,-54,115,-68,-89,48,-54,115,9,-54,
  123,-54,112,-54,113,-53,-63,9,-63,124,124,115,12,123,-57,12,113,103,-73,9,
  -96,-98,30,119,3,123,70,123};

 static final byte[] PY_ZIMU_CODE_PADDING = new byte[]{
  10,64,72,-126,64,-120,36,-96,36,66,64,4,66,4,64,-58,72,82,-120,-52,
  102,-86,108,4,-120,64,17,4,89,-86,-101,10,4,-127,37,-96,36,64,73,-102,
  -111,84,-101,1,34,2,76,-44,-118,-92,-40,4,66,9,24,-86,-104,9,16,-109,
  53,34,-87,54,2,68,4,1,16,-126,69,-102,-83,-88,2,68,4,-127,16,72,
  -83,-91,-85,75,85,50,-103,106,-9,-9,-5,-46,-43,-106,-87,-103,107,-3,38,83,
  45,90,-5,-67,-85,90,-69,-5,-65,-91,-85,90,-111,50,-103,19,41,118,-87,90,
  -86,-18,-17,-18,-2,-106,-83,84,-52,-82,-2,-17,-23,106,90,-6,76,-90,90,-75,
  -9,122,-43,-87,-75,-9,-9,122,90,-76,-75,34,101,50,38,82,-41,106,-107,-86,
  -82,-18,-2,-17,-62,74,-20};

 //dei,eng,hng,lo,lue,n,qui,r,tei, not find
 static final String[] PINYIN_TABLE = new String[]{"", "A", "Ai", "An", "Ang", "Ao", "Ba", "Bai",
  "Ban", "Bang", "Bao", "Bei", "Ben", "Beng", "Bi", "Bian", "Biao", "Bie", "Bin", "Bing",
  "Bo", "Bu", "Ca", "Cai", "Can", "Cang", "Cao", "Ce", "Cen", "Ceng", "Cha", "Chai",
  "Chan", "Chang", "Chao", "Che", "Chen", "Cheng", "Chi", "Chong", "Chou", "Chu", "Chuai",
  "Chuan", "Chuang", "Chui", "Chun", "Chuo", "Ci", "Cong", "Cou", "Cu", "Cuan", "Cui",
  "Cun", "Cuo", "Da", "Dai", "Dan", "Dang", "Dao", "De", "Deng", "Di", "Dia", "Dian",
  "Diao", "Die", "Ding", "Diu", "Dong", "Dou", "Du", "Duan", "Dui", "Dun", "Duo", "E",
  "Ei", "En", "Er", "E^", "Fa", "Fan", "Fang", "Fei", "Fen", "Feng", "Fo", "Fou", "Fu",
  "Ga", "Gai", "Gan", "Gang", "Gao", "Ge", "Gei", "Gen", "Geng", "Gong", "Gou", "Gu",
  "Gua", "Guai", "Guan", "Guang", "Gui", "Gun", "Guo", "Ha", "Hai", "Han", "Hang", "Hao",
  "He", "Hei", "Hen", "Heng", "Hong", "Hou", "Hu", "Hua", "Huai", "Huan", "Huang", "Hui",
  "Hun", "Huo", "Ji", "Jia", "Jian", "Jiang", "Jiao", "Jie", "Jin", "Jing", "Jiong",
  "Jiu", "Ju", "Juan", "Jue", "Jun", "Ka", "Kai", "Kan", "Kang", "Kao", "Ke", "Ken",
  "Keng", "Kong", "Kou", "Ku", "Kua", "Kuai", "Kuan", "Kuang", "Kui", "Kun", "Kuo", "La",
  "Lai", "Lan", "Lang", "Lao", "Le", "Lei", "Leng", "Li", "Lia", "Lian", "Liang", "Liao",
  "Lie", "Lin", "Ling", "Liu", "Long", "Lou", "Lu", "Luan", "Lun", "Luo", "Lv", "Lve",
  "M", "Ma", "Mai", "Man", "Mang", "Mao", "Me", "Mei", "Men", "Meng", "Mi", "Mian",
  "Miao", "Mie", "Min", "Ming", "Miu", "Mo", "Mou", "Mu", "Na", "Nai", "Nan", "Nang",
  "Nao", "Ne", "Nei", "Nen", "Neng", "Ng", "Ni", "Nian", "Niang", "Niao", "Nie", "Nin",
  "Ning", "Niu", "Nong", "Nou", "Nu", "Nuan", "Nuo", "Nv", "Nve", "O", "Ou", "Pa", "Pai",
  "Pan", "Pang", "Pao", "Pei", "Pen", "Peng", "Pi", "Pian", "Piao", "Pie", "Pin", "Ping",
  "Po", "Pou", "Pu", "Qi", "Qia", "Qian", "Qiang", "Qiao", "Qie", "Qin", "Qing", "Qiong",
  "Qiu", "Qu", "Quan", "Que", "Qun", "Ran", "Rang", "Rao", "Re", "Ren", "Reng", "Ri",
  "Rong", "Rou", "Ru", "Ruan", "Rui", "Run", "Ruo", "Sa", "Sai", "San", "Sang", "Sao",
  "Se", "Sen", "Seng", "Sha", "Shai", "Shan", "Shang", "Shao", "She", "Shei", "Shen",
  "Sheng", "Shi", "Shou", "Shu", "Shua", "Shuai", "Shuan", "Shuang", "Shui", "Shun",
  "Shuo", "Si", "Song", "Sou", "Su", "Suan", "Sui", "Sun", "Suo", "Ta", "Tai", "Tan",
  "Tang", "Tao", "Te", "Teng", "Ti", "Tian", "Tiao", "Tie", "Ting", "Tong", "Tou", "Tu",
  "Tuan", "Tui", "Tun", "Tuo", "Wa", "Wai", "Wan", "Wang", "Wei", "Wen", "Weng", "Wo",
  "Wu", "Xi", "Xia", "Xian", "Xiang", "Xiao", "Xie", "Xin", "Xing", "Xiong", "Xiu", "Xu",
  "Xuan", "Xue", "Xun", "Ya", "Yan", "Yang", "Yao", "Ye", "Yi", "Yiao", "Yin", "Ying",
  "Yo", "Yong", "You", "Yu", "Yuan", "Yue", "Yun", "Za", "Zai", "Zan", "Zang", "Zao",
  "Ze", "Zei", "Zen", "Zeng", "Zha", "Zhai", "Zhan", "Zhang", "Zhao", "Zhe", "Zhei",
  "Zhen", "Zheng", "Zhi", "Zhong", "Zhou", "Zhu", "Zhua", "Zhuai", "Zhuan", "Zhuang",
  "Zhui", "Zhun", "Zhuo", "Zi", "Zong", "Zou", "Zu", "Zuan", "Zui", "Zun", "Zuo",
  "Dei","Eng","Hng","Lo","Lue","N","Qui","R","Tei"};
}
